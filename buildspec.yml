version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR for CICD of test-app-one on 'date'
      - aws --version
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 867344433247.dkr.ecr.eu-north-1.amazonaws.com
      - echo setting repository URI...
      - REPOSITORY_URI=867344433247.dkr.ecr.eu-north-1.amazonaws.com/test-app-one
      - echo REPOSITORY_URI=$REPOSITORY_URI
      - echo setting image tag...
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{pring $2}')

  build:
    commands:
      - echo building and tagging started image on 'date'...
      - echo running maven clean install...
      - mvn clean install
      - echo building the docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - echo tagging the docker image...
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo pushing the docker image to Amazon ECR started on 'date'...
      - echo pushing to repository=$REPOSITORY_URI...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo setting container name...
      - DOCKER_CONTAINER_NAME=test-app-one-cname
      - echo writing image definitions file
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG >> imagedefinitions.json
      - echo '[{"name":"container-name","imageUri":"'$REPOSITORY_URI:$IMAGE_TAG'"}]' > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json